server:
  port: ${SERVER_PORT}

spring:
  application:
    name: ${APPLICATION_NAME}

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}

    producer:
      transaction-topic: ${KAFKA_PRODUCER_TRANSACTION_TOPIC}
      key-serializer: ${KAFKA_PRODUCER_KEY_SERIALIZER}
      value-serializer: ${KAFKA_PRODUCER_VALUE_SERIALIZER}

    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID}
      auto-offset-reset: ${AUTO_OFFSET_RESET}
      key-deserializer: ${KAFKA_CONSUMER_KEY_SERIALIZER}
      value-deserializer: ${KAFKA_CONSUMER_KEY_SERIALIZER}

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS}

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    show-sql: ${SPRING_JPA_SHOW_SQL}
    properties:
      hibernate:
        format_sql: ${SPRING_JPA_FORMAT_SQL}
        dialect: ${SPRING_JPA_FORMAT_SQL}

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus